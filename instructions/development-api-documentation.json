{
  "id": "development-api-documentation",
  "title": "Comprehensive API Documentation Generation",
  "description": "Create developer-friendly API documentation with examples and integration guides",
  "category": "development",
  "difficulty": "intermediate",
  "timeEstimate": "25 minutes",
  "aiScore": 8,
  "tools": ["Claude-4-Opus", "ChatGPT-4"],
  "source": "Based on API documentation best practices from Stripe, Twilio, and OpenAPI specification guides",
  "languages": {
    "en": {
      "steps": [
        {
          "title": "API Documentation Creation",
          "description": "Generate complete API documentation with examples and use cases",
          "tool": "Claude-4-Opus",
          "toolReason": "Excellent at understanding complex APIs and creating clear documentation",
          "timeEstimate": "25 minutes",
          "prompt": "You are an experienced API developer and technical writer. Think step by step to create excellent API documentation.\n\nCreate comprehensive API docs covering:\n1. Getting started guide with authentication\n2. Endpoint documentation with examples\n3. Error handling and status codes\n4. Integration patterns and best practices\n\nAPI details: [describe your API, paste OpenAPI spec, or provide endpoint details]\n\nIf you need more context about target developers, authentication method, or specific use cases, ask clarifying questions.\n\nProvide:\n**Quick Start**: [5-minute setup with working example]\n**Endpoint Reference**: [method, URL, parameters, responses]\n**Code Examples**: [in 2-3 popular languages]\n**Error Handling**: [status codes and error format]\n**Integration Guide**: [common patterns and best practices]\n**Testing**: [how to test API calls]\n\nEnsure examples are:\n- Working and copy-pasteable\n- Realistic data, not placeholders\n- Include error scenarios",
          "tips": [
            "Start with the most common use case",
            "Include working code examples that developers can copy"
          ]
        }
      ]
    },
    "de": {
      "steps": [
        {
          "title": "API-Dokumentationserstellung",
          "description": "Vollständige API-Dokumentation mit Beispielen und Anwendungsfällen generieren",
          "tool": "Claude-4-Opus",
          "toolReason": "Exzellent im Verstehen komplexer APIs und Erstellen klarer Dokumentation",
          "timeEstimate": "25 Minuten",
          "prompt": "Du bist ein erfahrener API-Entwickler und technischer Redakteur. Denke schrittweise, um exzellente API-Dokumentation zu erstellen.\n\nErstelle umfassende API-Dokumentation, die abdeckt:\n1. Erste Schritte Leitfaden mit Authentifizierung\n2. Endpunkt-Dokumentation mit Beispielen\n3. Fehlerbehandlung und Statuscodes\n4. Integrationsmuster und bewährte Praktiken\n\nAPI-Details: [beschreibe deine API, füge OpenAPI-Spezifikation ein oder gib Endpunkt-Details an]\n\nWenn du mehr Kontext über Zielentwickler, Authentifizierungsmethode oder spezifische Anwendungsfälle benötigst, stelle klärende Fragen.\n\nStelle bereit:\n**Schnellstart**: [5-Minuten-Setup mit funktionierendem Beispiel]\n**Endpunkt-Referenz**: [Methode, URL, Parameter, Antworten]\n**Code-Beispiele**: [in 2-3 beliebten Sprachen]\n**Fehlerbehandlung**: [Statuscodes und Fehlerformat]\n**Integrationsleitfaden**: [häufige Muster und bewährte Praktiken]\n**Testen**: [wie API-Aufrufe getestet werden]\n\nStelle sicher, dass Beispiele:\n- Funktionieren und kopierbar sind\n- Realistische Daten verwenden, keine Platzhalter\n- Fehlerszenarien einschließen",
          "tips": [
            "Mit dem häufigsten Anwendungsfall beginnen",
            "Funktionierende Code-Beispiele einschließen, die Entwickler kopieren können"
          ]
        }
      ]
    }
  }
}