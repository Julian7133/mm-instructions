{
  "id": "development-api-documentation",
  "title": "Comprehensive API Documentation Generation",
  "description": "Create developer-friendly API documentation with examples and integration guides",
  "category": "development",
  "difficulty": "intermediate",
  "timeEstimate": "25 minutes",
  "aiScore": 8,
  "tools": ["Claude-4-Opus", "ChatGPT-4"],
  "source": "Based on API documentation best practices from Stripe, Twilio, and OpenAPI specification guides",
  "languages": {
    "en": {
      "steps": [
        {
          "title": "API Documentation Creation",
          "description": "Generate complete API documentation with examples and use cases",
          "tool": "Claude-4-Opus",
          "toolReason": "Excellent at understanding complex APIs and creating clear documentation",
          "timeEstimate": "25 minutes",
          "prompt": "You are an experienced API developer and technical writer. Think step by step to create excellent API documentation.\n\nCreate comprehensive API docs covering:\n1. Getting started guide with authentication\n2. Endpoint documentation with examples\n3. Error handling and status codes\n4. Integration patterns and best practices\n\nAPI details: [describe your API or paste OpenAPI spec]\nTarget developers: [internal/external/partner]\nAuthentication: [API keys/OAuth/JWT]\nKey use cases: [main scenarios]\n\nProvide:\n**Quick Start**: [5-minute setup with working example]\n**Endpoint Reference**: [method, URL, parameters, responses]\n**Code Examples**: [in 2-3 popular languages]\n**Error Handling**: [status codes and error format]\n**Integration Guide**: [common patterns and best practices]\n**Testing**: [how to test API calls]\n\nEnsure examples are:\n- Working and copy-pasteable\n- Realistic data, not placeholders\n- Include error scenarios",
          "tips": [
            "Start with the most common use case",
            "Include working code examples that developers can copy"
          ]
        }
      ]
    }
  }
}